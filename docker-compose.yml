
services:
  lodgify-mcp:
    # Use image for production, build for development (see profiles below)
    image: ghcr.io/mikerobgit/lodgify-mcp:latest
    container_name: lodgify-mcp-server
    
    # Environment variables from .env file
    env_file:
      - .env
    
    # Additional environment variables
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PORT=${DOCKER_PORT:-3000}
    
    # Port mapping
    ports:
      - "${DOCKER_PORT:-3000}:${DOCKER_PORT:-3000}"
    
    # Restart policy
    restart: unless-stopped
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${DOCKER_PORT:-3000}/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    
    # Logging configuration
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    
    # Network for MCP client connectivity
    networks:
      - mcp-network
    
    # Resource limits for production
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    
    # Default profile (production)
    profiles:
      - production

  lodgify-mcp-http:
    build:
      context: .
      dockerfile: Dockerfile.http
      args:
        - PORT=${DOCKER_PORT:-3000}

    container_name: lodgify-mcp-http

    env_file:
      - .env

    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PORT=${DOCKER_PORT:-3000}
      - HTTP_PORT=${HTTP_PORT:-3000}
      - HTTP_HOST=${HTTP_HOST:-0.0.0.0}
      - BASE_URL=${BASE_URL:-http://localhost:3000}
      # Authentication
      - AUTH_MODE=${AUTH_MODE:-bearer}
      - MCP_TOKEN=${MCP_TOKEN:-}
      - AUTH_BEARER_TOKEN=${AUTH_BEARER_TOKEN:-}
      # OAuth (if configured)
      - OAUTH_PROVIDER=${OAUTH_PROVIDER:-}
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID:-}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET:-}
      - OAUTH_SCOPES=${OAUTH_SCOPES:-}
      - OAUTH_DOMAIN=${OAUTH_DOMAIN:-}
      - OAUTH_REALM=${OAUTH_REALM:-}
      - OAUTH_BASE_URL=${OAUTH_BASE_URL:-}
      - OAUTH_AUDIENCE=${OAUTH_AUDIENCE:-}
      - SESSION_SECRET=${SESSION_SECRET:-}
      - TRUST_PROXY=${TRUST_PROXY:-false}

    ports:
      - "${DOCKER_PORT:-3000}:${DOCKER_PORT:-3000}"

    restart: unless-stopped

    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:$${PORT:-3000}/health || exit 1"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

    networks:
      - mcp-network

    profiles:
      - http

  # Development configuration
  lodgify-mcp-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - PORT=${DOCKER_PORT:-3000}
    
    container_name: lodgify-mcp-dev
    
    # Mount source code for hot reload
    volumes:
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      # Prevent node_modules from being overwritten
      - /app/node_modules
    
    # Development environment
    env_file:
      - .env
      - .env.docker
    
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - PORT=${DOCKER_PORT:-3000}
      - DEBUG_HTTP=${DEBUG_HTTP:-1}
    
    # Port mapping for development
    ports:
      - "${DOCKER_PORT:-3000}:${DOCKER_PORT:-3000}"
    
    # Development command (uses bun dev for hot reload)
    command: ["bun", "run", "dev"]
    
    # Always restart in development
    restart: always
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${DOCKER_PORT:-3000}/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3
    
    # Logging for development
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    
    # Network
    networks:
      - mcp-network
    
    # Development profile
    profiles:
      - development
      - dev

networks:
  mcp-network:
    external: true
    name: lodgify-mcp-network
