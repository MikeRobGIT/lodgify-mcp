name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write # Required for provenance

jobs:
  release:
    name: Release to npm
    runs-on: ubuntu-latest
    # Only run if this is a version tag
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to check branch
      
      - name: Verify tag is on main branch
        run: |
          echo "Checking if tag is on main branch..."
          # Get the commit SHA for this tag
          TAG_COMMIT=$(git rev-list -n 1 ${{ github.ref_name }})
          echo "Tag commit: $TAG_COMMIT"
          
          # Check if this commit exists on main branch
          if git branch -r --contains $TAG_COMMIT | grep -q "origin/main"; then
            echo "✅ Tag ${{ github.ref_name }} is on main branch"
          else
            echo "❌ Tag ${{ github.ref_name }} is not on main branch"
            echo "Release workflow only runs for tags on main branch"
            exit 1
          fi

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js (for npm publish)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test
        env:
          LODGIFY_API_KEY: test-api-key
          TEST_MODE: mock

      - name: Build
        run: bun run build

      - name: Verify build output
        run: |
          echo "Checking required files..."
          [ -f "dist/server.js" ] || (echo "❌ dist/server.js not found" && exit 1)
          [ -f "dist/lodgify-orchestrator.js" ] || (echo "❌ dist/lodgify-orchestrator.js not found" && exit 1)
          [ -f "bin/lodgify-mcp.js" ] || (echo "❌ bin/lodgify-mcp.js not found" && exit 1)
          [ -x "bin/lodgify-mcp.js" ] || (echo "❌ bin/lodgify-mcp.js not executable" && exit 1)
          echo "✅ All required files present and executable"

      - name: Test bin wrapper
        run: |
          echo "Testing bin wrapper with initialization..."
          echo '{"jsonrpc":"2.0","id":1,"method":"initialize","params":{"protocolVersion":"1.0.0","capabilities":{},"clientInfo":{"name":"test","version":"1.0.0"}}}' | timeout 2 node bin/lodgify-mcp.js || true
          echo "✅ Bin wrapper test passed"
        env:
          LODGIFY_API_KEY: test-api-key

      - name: Verify package
        run: |
          echo "Running npm pack dry-run..."
          npm pack --dry-run
          echo ""
          echo "Package contents:"
          npm pack --dry-run 2>/dev/null | grep -v "npm notice"
          echo ""
          echo "Package size:"
          npm pack --dry-run 2>&1 | grep "package size" || true
          npm pack --dry-run 2>&1 | grep "unpacked size" || true

      - name: Run security audit
        run: |
          echo "Running security audit..."
          bun audit || true
          npm audit --audit-level=high || true
        continue-on-error: true

      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"

      - name: Verify version match
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${{ steps.version.outputs.VERSION }}
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "❌ Version mismatch!"
            echo "Package.json: $PACKAGE_VERSION"
            echo "Git tag: $TAG_VERSION"
            exit 1
          fi
          echo "✅ Version match confirmed: $PACKAGE_VERSION"

      - name: Publish to npm with provenance
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com'
          scope: '@mikerobgit'

      - name: Publish to GitHub Packages
        run: |
          echo "Publishing to GitHub Packages..."
          # The package.json already has the correct scoped name @mikerob/lodgify-mcp
          # GitHub Packages requires the scope to match the owner (case-insensitive)
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          body: |
            ## Lodgify MCP Server ${{ github.ref_name }}

            ### Installation

            #### Via NPX (recommended)
            ```bash
            npx -y @mikerob/lodgify-mcp@${{ steps.version.outputs.VERSION }}
            ```

            #### Via NPM
            ```bash
            npm install -g @mikerob/lodgify-mcp@${{ steps.version.outputs.VERSION }}
            ```

            #### Via Bun
            ```bash
            bunx @mikerob/lodgify-mcp@${{ steps.version.outputs.VERSION }}
            ```

            ### MCP Configuration
            ```json
            {
              "mcpServers": {
                "lodgify": {
                  "command": "npx",
                  "args": ["-y", "@mikerob/lodgify-mcp@${{ steps.version.outputs.VERSION }}"],
                  "env": {
                    "LODGIFY_API_KEY": "your-api-key-here"
                  }
                }
              }
            }
            ```

            ### What's Changed
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/CHANGELOG.md) for details.

            ### Full Changelog
            https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post-release verification
        run: |
          echo "Waiting for registries to update..."
          sleep 10
          
          echo "Verifying package is available on npm..."
          npm view @mikerob/lodgify-mcp@${{ steps.version.outputs.VERSION }} version || (echo "⚠️ Package not yet visible on npm, may take a few minutes" && exit 0)
          
          echo ""
          echo "Verifying package is available on GitHub Packages..."
          npm view @mikerob/lodgify-mcp@${{ steps.version.outputs.VERSION }} version --registry=https://npm.pkg.github.com || (echo "⚠️ Package not yet visible on GitHub Packages, may take a few minutes" && exit 0)
