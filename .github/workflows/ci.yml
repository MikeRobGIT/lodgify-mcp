name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Test on Node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        node: [18, 20, 22]
        os: [ubuntu-latest, macos-latest]
        include:
          # Test with Bun on Ubuntu
          - os: ubuntu-latest
            node: bun
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        if: matrix.node != 'bun'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      
      - name: Setup Bun
        if: matrix.node == 'bun'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies (Node)
        if: matrix.node != 'bun'
        run: npm ci
      
      - name: Install dependencies (Bun)
        if: matrix.node == 'bun'
        run: bun install --frozen-lockfile
      
      - name: Run linter
        if: matrix.node != 'bun'
        run: npm run lint
      
      - name: Run linter (Bun)
        if: matrix.node == 'bun'
        run: bun run lint
      
      - name: Run type checking
        if: matrix.node != 'bun'
        run: npm run typecheck
      
      - name: Run type checking (Bun)
        if: matrix.node == 'bun'
        run: bun run typecheck
      
      - name: Run tests
        if: matrix.node != 'bun'
        run: npm test -- --run
        env:
          LODGIFY_API_KEY: test-api-key
          TEST_MODE: mock
      
      - name: Run tests (Bun)
        if: matrix.node == 'bun'
        run: bun test
        env:
          LODGIFY_API_KEY: test-api-key
          TEST_MODE: mock
      
      - name: Build
        if: matrix.node != 'bun'
        run: npm run build
      
      - name: Build (Bun)
        if: matrix.node == 'bun'
        run: bun run build
      
      - name: Verify build output
        run: |
          if [ ! -f "dist/server.js" ]; then
            echo "Build failed: dist/server.js not found"
            exit 1
          fi
          if [ ! -f "dist/lodgify.js" ]; then
            echo "Build failed: dist/lodgify.js not found"
            exit 1
          fi
      
      - name: Test build execution
        if: matrix.node != 'bun'
        run: |
          timeout 2 node dist/server.js || true
        env:
          LODGIFY_API_KEY: test-api-key
      
      - name: Test build execution (Bun)
        if: matrix.node == 'bun'
        run: |
          timeout 2 bun run dist/server.js || true
        env:
          LODGIFY_API_KEY: test-api-key

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests with coverage
        run: npm run test:coverage -- --run
        env:
          LODGIFY_API_KEY: test-api-key
          TEST_MODE: mock
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false