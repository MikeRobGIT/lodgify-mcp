# Task ID: 18
# Title: Remove Non-Existent Lodgify API Endpoints from MCP Server and HTTP Client
# Status: pending
# Dependencies: 2, 7, 13, 14
# Priority: medium
# Description: Audit and systematically remove all Lodgify API endpoints from server.ts and lodgify.ts that are not present in the official v2 API documentation, ensuring only supported endpoints remain registered and implemented.
# Details:
1. Obtain the latest Lodgify v2 API documentation from https://docs.lodgify.com and compile a definitive list of all officially supported endpoints, including their HTTP methods and paths.

2. In src/server.ts (MCP tool registrations) and src/lodgify.ts (HTTP client methods), identify all currently implemented endpoints, focusing on availability, rate management, booking CRUD, availability updates, and webhook endpoints.

3. For each implemented endpoint, cross-reference with the official documentation to verify its existence and support in v2. Mark any endpoints not present in the documentation for removal.

4. Remove all code, tool registrations, and method implementations for the 11 non-existent endpoints from both files. Ensure that any related Zod schemas, input/output types, and handler logic are also deleted to prevent dead code.

5. Refactor any code that references the removed endpoints to avoid runtime errors or broken tool dependencies. Update documentation and tool catalogs as needed to reflect the reduced set of supported endpoints.

6. Follow best practices for API integration maintenance: use version control to track all removals, ensure all changes are atomic and well-documented in commit messages, and update any internal API catalogs or OpenAPI/Swagger specs if maintained.

7. If possible, add comments or documentation indicating the audit date and the source of truth (API docs URL) for future maintainers.

# Test Strategy:
1. Manually verify that all endpoints remaining in server.ts and lodgify.ts are present in the official Lodgify v2 API documentation, with correct HTTP methods and paths.

2. Run the MCP server and ensure it starts without errors, and that all removed endpoints are no longer registered or accessible via the MCP interface.

3. Attempt to invoke each previously removed endpoint (via tests or manual calls) and confirm that they are not available and return appropriate errors (e.g., unregistered tool or 404).

4. Run the full test suite to ensure no references to removed endpoints remain and that all existing functionality passes.

5. Review documentation and tool catalogs to confirm they accurately reflect the current set of supported endpoints.

# Subtasks:
## 1. Compile Definitive List of Supported Lodgify v2 API Endpoints [pending]
### Dependencies: None
### Description: Obtain the latest Lodgify v2 API documentation and extract a comprehensive list of all officially supported endpoints, including their HTTP methods and paths.
### Details:
Access https://docs.lodgify.com or equivalent authoritative sources to enumerate every endpoint, method, and path supported in Lodgify API v2. Organize this data for easy cross-referencing.

## 2. Inventory All Implemented Endpoints in MCP Server and HTTP Client [done]
### Dependencies: 18.1
### Description: Identify and document all Lodgify API endpoints currently implemented in src/server.ts and src/lodgify.ts, including their HTTP methods and paths.
### Details:
Review the codebase to list every endpoint registered or implemented, focusing on availability, rate management, booking CRUD, availability updates, and webhook endpoints.

## 3. Cross-Reference Implemented Endpoints with Official API Documentation [done]
### Dependencies: 18.2
### Description: For each implemented endpoint, verify its existence and support in the official Lodgify v2 API documentation. Mark endpoints not present in the documentation for removal.
### Details:
Systematically compare the implemented endpoints list with the definitive API documentation. Clearly flag any endpoints that are not officially supported.

## 4. Remove Non-Existent Endpoints and Associated Code [in-progress]
### Dependencies: 18.3
### Description: Delete all code, tool registrations, and method implementations for endpoints not present in the official documentation from both src/server.ts and src/lodgify.ts, including related schemas and handler logic.
### Details:
Remove all references to non-existent endpoints, ensuring that Zod schemas, input/output types, and handler logic are also deleted to prevent dead code.

## 5. Refactor References and Update Documentation [pending]
### Dependencies: 18.4
### Description: Refactor any code that referenced removed endpoints to avoid runtime errors or broken tool dependencies, and update internal documentation and tool catalogs to reflect the changes.
### Details:
Update any code, documentation, or catalogs that referenced the removed endpoints. Add comments indicating the audit date and documentation source for future maintainers.

